class node:
    def __init__(self,dataval=None):
        self.dataval=dataval
        self.next=None
class linkedlist:
    def __init__(self):
        self.head=None

    def listprint(self):
        printval = self.head
        while printval is not None:
            print(printval.dataval)
            printval = printval.next

    def addtothebegin(self,n):
        n.next = self.head
        self.head=n

    def insert(self, n):
        current = self.head
        while current.next != None:
            current = current.next
        current.next=n

    def getsize(self):
        size=0
        while self.head != None:
            size=size+1
            self.head=self.head.next
        return size

    def findNode(self, value):

        curr = self.head
        while curr:
            if curr.dataval == value:
                return True
            curr = curr.next
        return False



def hashfunc(name):
    sum=0
    for i in range (name.__len__()):
        sum= sum+ord(name[i])
    return sum
array=[]
for i in range(97,123,1):
    nameofthelist=chr(i)+'_list'
    nameofthelist=linkedlist()
    array.append(nameofthelist)

#create dict of list and index
dict ={'a_list':'0',
'b_list':'1',
'c_list':'2',
'd_list':'3',
'e_list':'4',
'f_list':'5',
'g_list':'6',
'h_list':'7',
'i_list':'8',
'j_list':'9',
'k_list':'10',
'l_list':'11',
'm_list':'12',
'n_list':'13',
'o_list':'14',
'p_list':'15',
'q_list':'16',
'r_list':'17',
's_list':'18',
't_list':'19',
'u_list':'20',
'v_list':'21',
'w_list':'22',
'x_list':'23',
'y_list':'24',
'z_list':'25'}
class hashtable:
    def __init__(self):
        self.array=array

    # add elemnt to the linked list
    def add(self, element):
        #get the name of the list
        nameofthelist=element[0]+'_list'
        #get the key from the dict which is the linked list
        nameofthe=int(dict[nameofthelist])
        #insert the element in the linked list
        array[nameofthe].addtothebegin(node(hashfunc(element)))
     def dele(self,elelment):
         nameofthelist=elelment[0]+'_list'
         nameofthelist=linkedlist()
         
